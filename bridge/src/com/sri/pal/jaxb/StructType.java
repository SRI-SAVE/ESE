/*
 * Copyright 2016 SRI International
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vJAXB 2.1.10 in JDK 6 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2012.07.10 at 05:21:16 PM MDT 
//


package com.sri.pal.jaxb;

import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;


/**
 * 
 *                 Holds a fixed-length, ordered list of objects, each of a distinct type. The
 *                 contained objects may be atoms, lists, or tuples.
 *             
 * 
 * <p>Java class for StructType complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="StructType">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;element name="inherit" type="{}InheritType" minOccurs="0"/>
 *         &lt;element name="generalizeUnsupported" type="{}GeneralizeUnsupportedType" minOccurs="0"/>
 *         &lt;element name="ref" type="{}StructMemberType" maxOccurs="unbounded"/>
 *       &lt;/sequence>
 *       &lt;attribute name="opaque" type="{http://www.w3.org/2001/XMLSchema}boolean" />
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "StructType", propOrder = {
    "inherit",
    "generalizeUnsupported",
    "ref"
})
public class StructType {

    protected InheritType inherit;
    protected GeneralizeUnsupportedType generalizeUnsupported;
    @XmlElement(required = true)
    protected List<StructMemberType> ref;
    @XmlAttribute
    protected Boolean opaque;

    /**
     * Gets the value of the inherit property.
     * 
     * @return
     *     possible object is
     *     {@link InheritType }
     *     
     */
    public InheritType getInherit() {
        return inherit;
    }

    /**
     * Sets the value of the inherit property.
     * 
     * @param value
     *     allowed object is
     *     {@link InheritType }
     *     
     */
    public void setInherit(InheritType value) {
        this.inherit = value;
    }

    /**
     * Gets the value of the generalizeUnsupported property.
     * 
     * @return
     *     possible object is
     *     {@link GeneralizeUnsupportedType }
     *     
     */
    public GeneralizeUnsupportedType getGeneralizeUnsupported() {
        return generalizeUnsupported;
    }

    /**
     * Sets the value of the generalizeUnsupported property.
     * 
     * @param value
     *     allowed object is
     *     {@link GeneralizeUnsupportedType }
     *     
     */
    public void setGeneralizeUnsupported(GeneralizeUnsupportedType value) {
        this.generalizeUnsupported = value;
    }

    /**
     * Gets the value of the ref property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the ref property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getRef().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link StructMemberType }
     * 
     * 
     */
    public List<StructMemberType> getRef() {
        if (ref == null) {
            ref = new ArrayList<StructMemberType>();
        }
        return this.ref;
    }

    /**
     * Gets the value of the opaque property.
     * 
     * @return
     *     possible object is
     *     {@link Boolean }
     *     
     */
    public Boolean isOpaque() {
        return opaque;
    }

    /**
     * Sets the value of the opaque property.
     * 
     * @param value
     *     allowed object is
     *     {@link Boolean }
     *     
     */
    public void setOpaque(Boolean value) {
        this.opaque = value;
    }

}
