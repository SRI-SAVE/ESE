<?xml version="1.0"?>
<!--
  ~ Copyright 2016 SRI International
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~ http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->

<actionModel version="1.0">

    <type id="oid">
        <description>Object identifier</description>
        <custom>
            <javaType>java.lang.Long</javaType>
        </custom>
    </type>

    <type id="oidList">
        <description>List of oids</description>
        <list>
            <ref typeRef="oid"/>
        </list>
    </type>
    
    <family id="add">
        <inputParam role="object"/>
        <inputParam role="destination"/>
    </family>
    
    <family id="remove">
        <inputParam role="object"/>
        <inputParam role="source"/>
    </family>    

    <action id="makeItem">
        <description>Create a new item</description>
        <inputParam id="type">
            <class class="constant"/>
            <typeRef typeId="oid"/>
        </inputParam>
        <outputParam id="created">
            <typeRef typeId="oid"/>
        </outputParam>
    </action>

    <action id="addToContainer">
        <description>Add one object to another, which must be a 
        container.</description>
        <idiomFamily family="add"/>        
        <inputParam id="toBeAdded">
            <typeRef typeId="oid"/>
            <idiomParam family="add" role="object"/>
        </inputParam>
        <inputParam id="container">
            <typeRef typeId="oid"/>
            <idiomParam family="add" role="destination"/>            
        </inputParam>
    </action>

    <action id="removeFromContainer">
        <description>Remove one object from another, which
        must be a container.</description>
        <idiomFamily family="remove"/>
        <inputParam id="toBeRemoved">
            <typeRef typeId="oid"/>
            <idiomParam family="remove" role="object"/>            
        </inputParam>
        <inputParam id="container">
            <typeRef typeId="oid"/>
            <idiomParam family="remove" role="source"/>            
        </inputParam>
    </action>

    <action id="selectAll">
        <description>Select all items in a container.</description>
        <inputParam id="container">
            <typeRef typeId="oid"/>
        </inputParam>
        <outputParam id="contents">
            <typeRef typeId="oidList"/>
        </outputParam>
    </action>

    <action id="div2" category="query">
        <description>Single-argument query. Is the oid divisible by
        2?</description>
        <inputParam id="id">
            <typeRef typeId="oid"/>
        </inputParam>
        <outputParam id="result">
            <typeRef typeId="boolean"/>
        </outputParam>
    </action>

    <action id="lessThan2" category="query">
        <description>Two-argument query. Is the first less than the
        second?</description>
        <inputParam id="A">
            <typeRef typeId="oid"/>
        </inputParam>
        <inputParam id="B">
            <typeRef typeId="oid"/>
        </inputParam>
        <outputParam id="result">
            <typeRef typeId="boolean"/>
        </outputParam>
    </action>

    <action id="lessThan3" category="query">
        <description>Three-argument query. Are the arguments
        numerically sorted?</description>
        <inputParam id="A">
            <typeRef typeId="oid"/>
        </inputParam>
        <inputParam id="B">
            <typeRef typeId="oid"/>
        </inputParam>
        <inputParam id="C">
            <typeRef typeId="oid"/>
        </inputParam>
        <outputParam id="result">
            <typeRef typeId="boolean"/>
        </outputParam>
    </action>
        
    <idiom id="move">
        <description/>
        <metadata key="fancyName" value="Move ,#object, from ,#source, to ,#dest"/>

        <inputParam id="object" matchIf="equals"/>
        <inputParam id="source"/>
        <inputParam id="dest"/>

        <template id="1" precedence="1">
            <action family="remove">
                <idiomParam id="object" role="object"/>
                <idiomParam id="source" role="source"/>
            </action>
            <action family="add">
                <idiomParam id="object" role="object"/>
                <idiomParam id="dest" role="destination"/>
            </action>            
        </template>
    </idiom>   
</actionModel>
