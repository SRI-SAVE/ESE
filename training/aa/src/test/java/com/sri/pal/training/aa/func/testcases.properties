#
# Copyright 2016 SRI International
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

# $Id: testcases.properties 7401 2016-03-25 20:18:20Z Chris Jones (E24486) $

# All values are either resources or classes on the
# classpath. Unqualified names are resolved relative to this
# package. Test cases are numbered sequentially starting with 0, and
# each test case must define all 6 properties.

# Use Novo to build a square-triangle-circle diagram.
test.0.actionModel = /com/sri/tasklearning/novo/adept/novo.xml
test.0.namespace = novo
test.0.exercise = aikido-exer.xml
test.0.response = aikido-resp.xml
test.0.application =
test.0.cost = 0
test.0.error =
test.0.maxExpansions = 1000

# This test case was generated by LoadTest.
test.1.actionModel = /com/sri/pal/training/aa/MockCpof.xml
test.1.namespace = LoadTest
test.1.exercise = loadtest1-exer.xml
test.1.response = loadtest1-resp.xml
test.1.application = com.sri.pal.training.aa.MockCpofExecutor
test.1.cost = 60
test.1.error =
test.1.maxExpansions = 1000

# This test case was generated by LoadTest.
test.2.actionModel = /com/sri/pal/training/aa/MockCpof.xml
test.2.namespace = LoadTest
test.2.exercise = loadtest2-exer.xml
test.2.response = loadtest2-resp.xml
test.2.application = com.sri.pal.training.aa.MockCpofExecutor
test.2.cost = 0
test.2.error =
test.2.maxExpansions = 1000

# This test case was generated by LoadTest.
test.3.actionModel = /com/sri/pal/training/aa/MockCpof.xml
test.3.namespace = LoadTest
test.3.exercise = loadtest3-exer.xml
test.3.response = loadtest3-resp.xml
test.3.application = com.sri.pal.training.aa.MockCpofExecutor
test.3.cost = 60
test.3.error =
test.3.maxExpansions = 1000

# This test case was generated by LoadTest. It took almost 2000 full matches
# (and 360k expansions) before it found a perfect (cost 0) match.
test.4.actionModel = /com/sri/pal/training/aa/MockCpof.xml
test.4.namespace = LoadTest
test.4.exercise = loadtest4-exer.xml
test.4.response = loadtest4-resp.xml
test.4.application = com.sri.pal.training.aa.MockCpofExecutor
test.4.cost = 0
test.4.error =
test.4.maxExpansions = 1000

# This test case was generated by LoadTest. It took 90 minutes to run.
test.5.actionModel = /com/sri/pal/training/aa/MockCpof.xml
test.5.namespace = LoadTest
test.5.exercise = loadtest5-exer.xml
test.5.response = loadtest5-resp.xml
test.5.application = com.sri.pal.training.aa.MockCpofExecutor
test.5.cost = 0
test.5.error =
test.5.maxExpansions = 1000

test.6.actionModel = /com/sri/pal/training/aa/MockCpof.xml
test.6.namespace = LoadTest
test.6.exercise = loadtest6-exer.xml
test.6.response = loadtest6-resp.xml
test.6.application = com.sri.pal.training.aa.MockCpofExecutor
test.6.cost = 60
test.6.error =
test.6.maxExpansions = 1000

# exercise9.xml
test.7.actionModel = /com/sri/pal/training/aa/MockCpof.xml
test.7.namespace = LoadTest
test.7.exercise = loadtest7-exer.xml
test.7.response = loadtest7-resp.xml
test.7.application = com.sri.pal.training.aa.MockCpofExecutor
test.7.cost = 180
test.7.error =
test.7.maxExpansions = 1000

test.8.actionModel = /com/sri/pal/training/aa/MockCpof.xml
test.8.namespace = LoadTest
test.8.exercise = loadtest8-exer.xml
test.8.response = loadtest8-resp.xml
test.8.application = com.sri.pal.training.aa.MockCpofExecutor
test.8.cost = 980
test.8.error =
test.8.maxExpansions = 1000

test.9.actionModel = /com/sri/pal/training/aa/MockCpof.xml
test.9.namespace = LoadTest
test.9.exercise = loadtest9-exer.xml
test.9.response = loadtest9-resp.xml
test.9.application = com.sri.pal.training.aa.MockCpofExecutor
test.9.cost = 240
test.9.error =
test.9.maxExpansions = 1000

test.10.actionModel = /com/sri/pal/training/aa/MockCpof.xml
test.10.namespace = LoadTest
test.10.exercise = loadtest10-exer.xml
test.10.response = loadtest10-resp.xml
test.10.application = com.sri.pal.training.aa.MockCpofExecutor
test.10.cost = 160
test.10.error =
test.10.maxExpansions = 1000

test.11.actionModel = /com/sri/pal/training/aa/MockCpof.xml
test.11.namespace = LoadTest
test.11.exercise = loadtest11-exer.xml
test.11.response = loadtest11-resp.xml
test.11.application = com.sri.pal.training.aa.MockCpofExecutor
test.11.cost = 0
test.11.error =
test.11.maxExpansions = 1000

# TLEARN-504. Check for swapped arguments. The cost should be
# 2 * (PARAM_NODE_WEIGHT + EDGE_WEIGHT)
test.12.actionModel = /com/sri/pal/training/aa/MockCpof.xml
test.12.namespace = LoadTest
test.12.exercise = tlearn504-exer.xml
test.12.response = tlearn504-resp.xml
test.12.application = com.sri.pal.training.aa.MockCpofExecutor
test.12.cost = 50
test.12.error =
test.12.maxExpansions = 1000

# TLEARN-506, part 1. Make sure query constraints work correctly.
test.13.actionModel = /com/sri/pal/training/aa/MockCpof.xml
test.13.namespace = LoadTest
test.13.exercise = tlearn506-exer.xml
test.13.response = tlearn506-1-resp.xml
test.13.application = com.sri.pal.training.aa.MockCpofExecutor
test.13.cost = 20
test.13.error =
test.13.maxExpansions = 1000

# TLEARN-506, part 2. Make sure query constraints work correctly.
test.14.actionModel = /com/sri/pal/training/aa/MockCpof.xml
test.14.namespace = LoadTest
test.14.exercise = tlearn506-exer.xml
test.14.response = tlearn506-2-resp.xml
test.14.application = com.sri.pal.training.aa.MockCpofExecutor
test.14.cost = 20
test.14.error =
test.14.maxExpansions = 1000

# TLEARN-507, part 1. Verify ordering constraints work.
test.15.actionModel = /com/sri/pal/training/aa/MockCpof.xml
test.15.namespace = LoadTest
test.15.exercise = tlearn507-exer.xml
test.15.response = tlearn507-1-resp.xml
test.15.application = com.sri.pal.training.aa.MockCpofExecutor
test.15.cost = 20
test.15.error =
test.15.maxExpansions = 1000

# TLEARN-507, part 2. Verify ordering constraints work.
test.16.actionModel = /com/sri/pal/training/aa/MockCpof.xml
test.16.namespace = LoadTest
test.16.exercise = tlearn507-exer.xml
test.16.response = tlearn507-2-resp.xml
test.16.application = com.sri.pal.training.aa.MockCpofExecutor
test.16.cost = 0
test.16.error =
test.16.maxExpansions = 1000

test.17.actionModel = /com/sri/pal/training/aa/MockCpof.xml
test.17.namespace = LoadTest
test.17.exercise = loadtest12-exer.xml
test.17.response = loadtest12-resp.xml
test.17.application = com.sri.pal.training.aa.MockCpofExecutor
test.17.cost = 20
test.17.error =
test.17.maxExpansions = 10000

test.18.actionModel = /com/sri/pal/training/aa/MockCpof.xml
test.18.namespace = LoadTest
test.18.exercise = loadtest13-exer.xml
test.18.response = loadtest13-resp.xml
test.18.application = com.sri.pal.training.aa.MockCpofExecutor
test.18.cost = 120
test.18.error =
test.18.maxExpansions = 10000

test.19.actionModel = /com/sri/pal/training/aa/MockCpof.xml
test.19.namespace = LoadTest
test.19.exercise = loadtest14-exer.xml
test.19.response = loadtest14-resp.xml
test.19.application = com.sri.pal.training.aa.MockCpofExecutor
test.19.cost = 280
test.19.error =
test.19.maxExpansions = 10000

test.20.actionModel = /com/sri/pal/training/aa/MockCpof.xml
test.20.namespace = LoadTest
test.20.exercise = loadtest15-exer.xml
test.20.response = loadtest15-resp.xml
test.20.application = com.sri.pal.training.aa.MockCpofExecutor
test.20.cost = 120
test.20.error =
test.20.maxExpansions = 10000

test.21.actionModel = /com/sri/pal/training/aa/MockCpof.xml
test.21.namespace = LoadTest
test.21.exercise = loadtest16-exer.xml
test.21.response = loadtest16-resp.xml
test.21.application = com.sri.pal.training.aa.MockCpofExecutor
test.21.cost = 100
test.21.error =
test.21.maxExpansions = 10000

test.22.actionModel = /com/sri/pal/training/aa/MockCpof.xml
test.22.namespace = LoadTest
test.22.exercise = loadtest17-exer.xml
test.22.response = loadtest17-resp.xml
test.22.application = com.sri.pal.training.aa.MockCpofExecutor
test.22.cost = 380
test.22.error =
test.22.maxExpansions = 10000

test.23.actionModel = /com/sri/pal/training/aa/MockCpof.xml
test.23.namespace = LoadTest
test.23.exercise = loadtest18-exer.xml
test.23.response = loadtest18-resp.xml
test.23.application = com.sri.pal.training.aa.MockCpofExecutor
test.23.cost = 20
test.23.error =
test.23.maxExpansions = 10000

test.24.actionModel = /com/sri/pal/training/aa/MockCpof.xml
test.24.namespace = LoadTest
test.24.exercise = loadtest19-exer.xml
test.24.response = loadtest19-resp.xml
test.24.application = com.sri.pal.training.aa.MockCpofExecutor
test.24.cost = 340
test.24.error =
test.24.maxExpansions = 10000

# This one here is an "innately hard" search problem. A best match is
# found right away but it takes a long time to prune the entire search space 
# because we can't infer any global problems from this graph. This will hit the
# 100K default expansion limit, but the result it gives is the best match
test.25.actionModel = /com/sri/pal/training/aa/MockCpof.xml
test.25.namespace = LoadTest
test.25.exercise = loadtest20-exer.xml
test.25.response = loadtest20-resp.xml
test.25.application = com.sri.pal.training.aa.MockCpofExecutor
test.25.cost = 80
test.25.error =
test.25.maxExpansions = 100000

#50 Actions, 20 constraints, 2 mutations
test.26.actionModel = /com/sri/pal/training/aa/MockCpof.xml
test.26.namespace = LoadTest
test.26.exercise = loadtest21-exer.xml
test.26.response = loadtest21-resp.xml
test.26.application = com.sri.pal.training.aa.MockCpofExecutor
test.26.cost = 220
test.26.error =
test.26.maxExpansions = 10000

# This test case was generated by LoadTest.
test.27.actionModel = /com/sri/pal/training/aa/MockCpof.xml
test.27.namespace = LoadTest
test.27.exercise = tlearn519-exer.xml
test.27.response = tlearn519-resp.xml
test.27.application = com.sri.pal.training.aa.MockCpofExecutor
test.27.cost = 0
test.27.error =
test.27.maxExpansions = 1000


